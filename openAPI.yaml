openapi: 3.0.0
info:
  title: User Authentication and Image Generation API
  version: 1.0.0
servers:
  - url: http://localhost:3000
paths:
  /signup:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
              required:
                - name
                - email
                - password
      responses:
        '200':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
  /signin:
    post:
      summary: Login a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        '200':
          description: User logged in successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
  /logout:
    get:
      summary: Logout a user
      responses:
        '200':
          description: User logged out successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
  /forgot-password:
    post:
      summary: Handle forgot password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
              required:
                - email
      responses:
        '200':
          description: Password reset email sent
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
  /reset-password/{token}:
    post:
      summary: Reset user password
      parameters:
        - in: path
          name: token
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
              required:
                - password
      responses:
        '200':
          description: Password reset successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
  /verify:
    get:
      summary: Verify if the user is logged in
      responses:
        '200':
          description: User is authorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
  /generate:
    post:
      summary: Generate an image based on a text prompt
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                prompt:
                  type: string
              required:
                - prompt
      responses:
        '200':
          description: Image generated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  api_data:
                    type: object
  /edit:
    post:
      summary: Edit an image using a text prompt
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                prompt:
                  type: string
                file:
                  type: string
                  format: binary
              required:
                - prompt
                - file
      responses:
        '200':
          description: Image edited successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  api_data:
                    type: object
  /edit-detail:
    post:
      summary: Detail edit an image using a text prompt
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                prompt:
                  type: string
                file:
                  type: string
                  format: binary
              required:
                - prompt
                - file
      responses:
        '200':
          description: Image detail edited successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  api_data:
                    type: object
